<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Resources on KubeTips</title>
    <link>https://kubetips.cloud/categories/resources/</link>
    <description>Recent content in Resources on KubeTips</description>
    <image>
      <url>https://kubetips.cloud/favicon.ico</url>
      <link>https://kubetips.cloud/favicon.ico</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 May 2022 14:54:19 +0200</lastBuildDate><atom:link href="https://kubetips.cloud/categories/resources/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NetworkPolicy : Enabling network isolation between Pods in the same Namespace</title>
      <link>https://kubetips.cloud/posts/isolatedns/</link>
      <pubDate>Thu, 26 May 2022 14:54:19 +0200</pubDate>
      
      <guid>https://kubetips.cloud/posts/isolatedns/</guid>
      <description>Pods are, by default, able to connect each other. No matter if they run in the same or different namespaces, no NAT will be performed between pods. Check this article to have more info on pods network.
To change this behaviour it is necessary introduce a custom NetworkPolicy. Just to recall the definition:
 NetworkPolicy is a resource which gives you the possibility to specify how a pod communicates with other pods/services in the network.</description>
    </item>
    
    <item>
      <title>Make the right choice: one or more Containers in a Pod ?</title>
      <link>https://kubetips.cloud/posts/containersinpod/</link>
      <pubDate>Thu, 19 May 2022 23:40:55 +0200</pubDate>
      
      <guid>https://kubetips.cloud/posts/containersinpod/</guid>
      <description>During the design phase you have to make a lot of right choices to avoid bad surprises during the deploy. One of the most frequent question is: &amp;ldquo;How can I organise my application in Kubernetes to achieve better performances ?&amp;rdquo; Sometimes the correct answer is just make the right decision in splitting and grouping the services in the correct way.
Pods, the resource you always need to Pods are the most used resource in a Kubernetes environment.</description>
    </item>
    
  </channel>
</rss>
