<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Marco Franzon on KubeTips</title>
    <link>https://kubetips.cloud/authors/marco-franzon/</link>
    <description>Recent content in Marco Franzon on KubeTips</description>
    <image>
      <url>https://kubetips.cloud/apple-touch-icon-120x120.png</url>
      <link>https://kubetips.cloud/apple-touch-icon-120x120.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 May 2022 14:54:19 +0200</lastBuildDate><atom:link href="https://kubetips.cloud/authors/marco-franzon/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NetworkPolicy : Enabling network isolation between Pods in the same Namespace</title>
      <link>https://kubetips.cloud/posts/isolatedns/</link>
      <pubDate>Thu, 26 May 2022 14:54:19 +0200</pubDate>
      
      <guid>https://kubetips.cloud/posts/isolatedns/</guid>
      <description>Pods are, by default, able to connect each other. No matter if they run in the same or different namespaces, no NAT will be performed between pods. Check this article to have more info on pods network.
To change this behaviour it is necessary introduce a custom NetworkPolicy. Just to recall the definition:
 NetworkPolicy is a resource which gives you the possibility to specify how a pod communicates with other pods/services in the network.</description>
    </item>
    
    <item>
      <title>Make the right choice: one or more Containers in a Pod ?</title>
      <link>https://kubetips.cloud/posts/containersinpod/</link>
      <pubDate>Thu, 19 May 2022 23:40:55 +0200</pubDate>
      
      <guid>https://kubetips.cloud/posts/containersinpod/</guid>
      <description>During the design phase you have to make a lot of right choices to avoid bad surprises during the deploy. One of the most frequent question is: &amp;ldquo;How can I organise my application in Kubernetes to achieve better performances ?&amp;rdquo; Sometimes the correct answer is just make the right decision in splitting and grouping the services in the correct way.
Pods, the resource you always need to Pods are the most used resource in a Kubernetes environment.</description>
    </item>
    
    <item>
      <title>Kubernetes in Cloud: easy way to deploy an EKS cluster (AWS)</title>
      <link>https://kubetips.cloud/posts/k8scloud/</link>
      <pubDate>Wed, 04 May 2022 20:24:02 +0200</pubDate>
      
      <guid>https://kubetips.cloud/posts/k8scloud/</guid>
      <description>One of the most used service, to have your Kubernetes cluster deploy in cloud, is the Elastic Kubernetes Service provided by AWS.
EKS, defined as containers-as-a-service (CaaS), (more details here regarding pricing and general overview) is a managed service that helps to run Kubernetes on AWS. Practically speaking, you do not need to manage the installation of Kubernetes on EC2 instances but you can leave all the configuration stuff to the services provided by EKS.</description>
    </item>
    
    <item>
      <title>Kubernetes: solutions to deploy it locally</title>
      <link>https://kubetips.cloud/posts/selfhostedk8s/</link>
      <pubDate>Sun, 17 Apr 2022 11:11:21 +0200</pubDate>
      
      <guid>https://kubetips.cloud/posts/selfhostedk8s/</guid>
      <description>In this article I want to summarize the most used softwares to deploy a local Kubernetes cluster on your local machine. Having a local deployment of your infrastructure is always a good idea for testing and debugging. There are several platforms you can choose to quickly have your self-hosted Kubernetes.
Minikube Minikube is probably the most used choice. It can runs in all the major OS and offers an easy installation guide.</description>
    </item>
    
  </channel>
</rss>
